#!/usr/bin/python
#
#    (C) 2015. Peter Crosthwiate
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import subprocess
import sys

mailrc = {};
try:
    for line in open(os.environ['GITLO_MAILRC']).readlines():
        tokens = line.split()
        if tokens[0] == "alias":
            if len(tokens) >= 3:
                #the other way round - index email addresses to shorthand.
                mailrc[tokens[2]] = tokens[1]
except:
    print "WARNING: no or corrupt mailrc (GITLO_MAILRC env), \
           output will be verbose"

output="";
skip = 0;

args = sys.argv
del args[0]
sp = subprocess.Popen(['git', 'log', '--reverse'] + args, stdout=subprocess.PIPE)
sp.wait()

def do_annotation(tokens, prefix):
        del tokens[0]
        while (tokens[0][0] != "<"):
            del tokens[0]
        email = tokens[0]
        email = email[1:len(email)-1]
        if email in mailrc:
            email = mailrc[email]
        return " " + prefix + ":" + email


for line in sp.stdout.readlines():
    #print line
    tokens = line.split()
    if len(tokens) == 0:
        tokens=[""]
    if skip > 0:
        if (skip == 1): #subject line
            output += " " + line.rstrip()
            for I in range(0, 75):
                if (len(output) < I):
                    output += " "
        skip -= 1;
    elif (tokens[0] == "commit"):
        print output
        del tokens[0]
        output = tokens[0][:10] #next commit
        del tokens[0]
        #we may have a decorated log, take the rest of this line as-is
        while len(tokens) > 0:
            output += " " + tokens[0]
            del tokens[0]
        skip = 4; #Author:, Date:, blank, subject
    elif tokens[0] == "Reviewed-by:":
        output = output + do_annotation(tokens, "R")
    elif tokens[0] == "Tested-by:":
        output = output + do_annotation(tokens, "T")
    elif tokens[0] == "Acked-by:":
        output = output + do_annotation(tokens, "A")
    elif tokens[0] == "Queued-by:":
        output = output + do_annotation(tokens, "Q")
print output
